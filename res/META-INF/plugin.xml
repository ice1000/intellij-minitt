<idea-plugin>
	<name>Dependently-Typed Lambda Calculus</name>
	<vendor email="ice1000kotlin@foxmail.com" url="https://ice1000.org">ice1000</vendor>
	<idea-version since-build="203.7148.57"/>

	<depends>com.intellij.modules.lang</depends>
	<resource-bundle>org.ice1000.tt.tt-bundle</resource-bundle>

	<extensions defaultExtensionNs="com.intellij">
		<internalFileTemplate name="Agda File"/>
		<internalFileTemplate name="ACore File"/>
		<internalFileTemplate name="CubicalTT File"/>
		<internalFileTemplate name="YaccTT File"/>
		<internalFileTemplate name="MiniTT File"/>
		<internalFileTemplate name="MLPolyR File"/>
		<internalFileTemplate name="OwO File"/>
		<internalFileTemplate name="RedPrl File"/>
		<internalFileTemplate name="Mlang File"/>
		<internalFileTemplate name="Narc File"/>
		<internalFileTemplate name="Voile File"/>
		<internalFileTemplate name="VitalyR File"/>

		<!--Common-->
		<!--suppress PluginXmlValidity -->
		<fileTypeFactory implementation="org.ice1000.tt.TTFileTypeFactory"/>
		<errorHandler implementation="org.ice1000.tt.error.GitHubErrorReporter"/>
		<additionalTextAttributes scheme="Default" file="/colorSchemes/TT.xml"/>
		<additionalTextAttributes scheme="Darcula" file="/colorSchemes/TT_dark.xml"/>
		<defaultLiveTemplatesProvider implementation="org.ice1000.tt.editing.TTLiveTemplateProvider"/>

		<!--Live template contexts-->
		<liveTemplateContext implementation="org.ice1000.tt.editing.MiniTTDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.OwODefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.AgdaDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.ACoreDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.RedPrlDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.MLPolyRDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.CubicalTTDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.YaccTTDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.VoileDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.TTParentContext"/>

		<!--Voile-->
		<configurationType implementation="org.ice1000.tt.execution.VoileRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.VoileRunConfigurationProducer"/>
		<lang.commenter language="Voile" implementationClass="org.ice1000.tt.editing.CxxLineCommenter"/>
		<lang.parserDefinition language="Voile" implementationClass="org.ice1000.tt.psi.voile.VoileGeneratedParserDefinition"/>
		<lang.syntaxHighlighterFactory language="Voile" implementationClass="org.ice1000.tt.editing.voile.VoileHighlighterFactory"/>
		<stubElementTypeHolder class="org.ice1000.tt.psi.voile.VoileTypes"/>
		<lang.findUsagesProvider language="Voile" implementationClass="org.ice1000.tt.editing.voile.VoileFindUsagesProvider"/>
		<lang.braceMatcher language="Voile" implementationClass="org.ice1000.tt.editing.voile.VoileBraceMatcher"/>
		<lang.refactoringSupport language="Voile" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.voile.VoileColorSettingsPage"/>
		<annotator language="Voile" implementationClass="org.ice1000.tt.editing.voile.VoileAnnotator"/>
		<completion.contributor language="Voile" implementationClass="org.ice1000.tt.editing.voile.VoileCompletionContributor"/>

		<!--Agda-->
		<configurationType implementation="org.ice1000.tt.execution.AgdaRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.AgdaRunConfigurationProducer"/>
		<lang.parserDefinition language="Agda" implementationClass="org.ice1000.tt.psi.agda.AgdaParserDefinition"/>
		<lang.syntaxHighlighterFactory language="Agda" implementationClass="org.ice1000.tt.editing.agda.AgdaHighlighterFactory"/>
		<lang.commenter language="Agda" implementationClass="org.ice1000.tt.editing.HaskellCommenter"/>
		<lang.braceMatcher language="Agda" implementationClass="org.ice1000.tt.editing.agda.AgdaBraceMatcher"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.agda.AgdaColorSettingsPage"/>
		<lang.foldingBuilder language="Agda" implementationClass="org.ice1000.tt.editing.agda.AgdaFoldingBuilder"/>
		<stubElementTypeHolder class="org.ice1000.tt.psi.agda.AgdaTypes"/>
		<annotator language="Agda" implementationClass="org.ice1000.tt.editing.agda.AgdaAnnotator"/>
		<lang.elementManipulator
			forClass="org.ice1000.tt.psi.agda.AgdaStringMixin"
			implementationClass="org.ice1000.tt.psi.agda.AgdaStringManipulator"/>
		<completion.contributor language="Agda" implementationClass="org.ice1000.tt.editing.agda.AgdaCompletionContributor"/>

		<!--CubicalTT-->
		<configurationType implementation="org.ice1000.tt.execution.CubicalTTRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.CubicalTTRunConfigurationProducer"/>
		<lang.parserDefinition language="CubicalTT" implementationClass="org.ice1000.tt.psi.cubicaltt.CubicalTTParserDefinition"/>
		<lang.commenter language="CubicalTT" implementationClass="org.ice1000.tt.editing.HaskellCommenter"/>
		<lang.braceMatcher language="CubicalTT" implementationClass="org.ice1000.tt.editing.cubicaltt.CubicalTTBraceMatcher"/>
		<lang.findUsagesProvider language="CubicalTT" implementationClass="org.ice1000.tt.editing.cubicaltt.CubicalTTFindUsagesProvider"/>
		<lang.syntaxHighlighterFactory language="CubicalTT" implementationClass="org.ice1000.tt.editing.cubicaltt.CubicalTTHighlighterFactory"/>
		<lang.refactoringSupport language="CubicalTT" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<lang.foldingBuilder language="CubicalTT" implementationClass="org.ice1000.tt.editing.cubicaltt.CubicalTTFoldingBuilder"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.cubicaltt.CubicalTTColorSettingsPage"/>
		<annotator language="CubicalTT" implementationClass="org.ice1000.tt.editing.cubicaltt.CubicalTTAnnotator"/>
		<stubIndex implementation="org.ice1000.tt.psi.cubicaltt.CubicalTTModuleStubKey"/>
		<stubIndex implementation="org.ice1000.tt.psi.cubicaltt.CubicalTTDefStubKey"/>
		<stubIndex implementation="org.ice1000.tt.psi.cubicaltt.CubicalTTLabelStubKey"/>
		<stubIndex implementation="org.ice1000.tt.psi.cubicaltt.CubicalTTDataStubKey"/>
		<stubElementTypeHolder class="org.ice1000.tt.psi.cubicaltt.CubicalTTTypes"/>
		<gotoSymbolContributor implementation="org.ice1000.tt.editing.cubicaltt.CubicalTTModuleNavigationContributor"/>
		<gotoSymbolContributor implementation="org.ice1000.tt.editing.cubicaltt.CubicalTTDeclNavigationContributor"/>
		<gotoSymbolContributor implementation="org.ice1000.tt.editing.cubicaltt.CubicalTTDataNavigationContributor"/>
		<gotoSymbolContributor implementation="org.ice1000.tt.editing.cubicaltt.CubicalTTLabelNavigationContributor"/>
		<completion.contributor language="CubicalTT" implementationClass="org.ice1000.tt.editing.cubicaltt.CubicalTTSmartCompletionContributor"/>

		<!--YaccTT-->
		<configurationType implementation="org.ice1000.tt.execution.YaccTTRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.YaccTTRunConfigurationProducer"/>
		<lang.parserDefinition language="YaccTT" implementationClass="org.ice1000.tt.psi.yacctt.YaccTTParserDefinition"/>
		<lang.commenter language="YaccTT" implementationClass="org.ice1000.tt.editing.HaskellCommenter"/>
		<lang.braceMatcher language="YaccTT" implementationClass="org.ice1000.tt.editing.yacctt.YaccTTBraceMatcher"/>
		<lang.findUsagesProvider language="YaccTT" implementationClass="org.ice1000.tt.editing.yacctt.YaccTTFindUsagesProvider"/>
		<lang.syntaxHighlighterFactory language="YaccTT" implementationClass="org.ice1000.tt.editing.yacctt.YaccTTHighlighterFactory"/>
		<lang.refactoringSupport language="YaccTT" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<lang.foldingBuilder language="YaccTT" implementationClass="org.ice1000.tt.editing.yacctt.YaccTTFoldingBuilder"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.yacctt.YaccTTColorSettingsPage"/>
		<annotator language="YaccTT" implementationClass="org.ice1000.tt.editing.yacctt.YaccTTAnnotator"/>
		<stubIndex implementation="org.ice1000.tt.psi.yacctt.YaccTTModuleStubKey"/>
		<stubIndex implementation="org.ice1000.tt.psi.yacctt.YaccTTDefStubKey"/>
		<stubIndex implementation="org.ice1000.tt.psi.yacctt.YaccTTLabelStubKey"/>
		<stubIndex implementation="org.ice1000.tt.psi.yacctt.YaccTTDataStubKey"/>
		<stubElementTypeHolder class="org.ice1000.tt.psi.yacctt.YaccTTTypes"/>
		<gotoSymbolContributor implementation="org.ice1000.tt.editing.yacctt.YaccTTModuleNavigationContributor"/>
		<gotoSymbolContributor implementation="org.ice1000.tt.editing.yacctt.YaccTTDeclNavigationContributor"/>
		<gotoSymbolContributor implementation="org.ice1000.tt.editing.yacctt.YaccTTDataNavigationContributor"/>
		<gotoSymbolContributor implementation="org.ice1000.tt.editing.yacctt.YaccTTLabelNavigationContributor"/>
		<completion.contributor language="YaccTT" implementationClass="org.ice1000.tt.editing.yacctt.YaccTTSmartCompletionContributor"/>

		<!--MLPolyR-->
		<configurationType implementation="org.ice1000.tt.execution.MLPolyRRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.MLPolyRRunConfigurationProducer"/>
		<lang.parserDefinition language="MLPolyR" implementationClass="org.ice1000.tt.psi.mlpolyr.MLPolyRParserDefinition"/>
		<lang.syntaxHighlighterFactory language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRHighlighterFactory"/>
		<lang.commenter language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRCommenter"/>
		<lang.findUsagesProvider language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRFindUsagesProvider"/>
		<lang.braceMatcher language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRBraceMatcher"/>
		<lang.refactoringSupport language="MLPolyR" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.mlpolyr.MLPolyRColorSettingsPage"/>
		<annotator language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRAnnotator"/>
		<stubElementTypeHolder class="org.ice1000.tt.psi.mlpolyr.MLPolyRTypes"/>
		<completion.contributor language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRSmartCompletionContributor"/>
		<lang.foldingBuilder language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRFoldingBuilder"/>
		<lang.elementManipulator
			forClass="org.ice1000.tt.psi.mlpolyr.MLPolyRStringMixin"
			implementationClass="org.ice1000.tt.psi.mlpolyr.MLPolyRStringManipulator"/>

		<!--Vanilla Mini-TT-->
		<configurationType implementation="org.ice1000.tt.execution.ACoreRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.ACoreRunConfigurationProducer"/>
		<lang.parserDefinition language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.psi.acore.ACoreGeneratedParserDefinition"/>
		<lang.syntaxHighlighterFactory language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.acore.ACoreHighlighterFactory"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.acore.ACoreColorSettingsPage"/>
		<annotator language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.acore.ACoreAnnotator"/>
		<stubElementTypeHolder class="org.ice1000.tt.psi.acore.ACoreTypes"/>
		<completion.contributor language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.acore.ACoreCompletionContributor"/>
		<lang.refactoringSupport language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<lang.findUsagesProvider language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.acore.ACoreFindUsagesProvider"/>
		<lang.commenter language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.HaskellCommenter"/>
		<lang.braceMatcher language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.acore.ACoreBraceMatcher"/>
		<lang.foldingBuilder language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.acore.ACoreFoldingBuilder"/>

		<!--Mini-TT-->
		<configurationType implementation="org.ice1000.tt.execution.MiniTTRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.MiniTTRunConfigurationProducer"/>
		<lang.parserDefinition language="Mini-TT" implementationClass="org.ice1000.tt.psi.minitt.MiniTTGeneratedParserDefinition"/>
		<lang.syntaxHighlighterFactory language="Mini-TT" implementationClass="org.ice1000.tt.editing.minitt.MiniTTHighlighterFactory"/>
		<annotator language="Mini-TT" implementationClass="org.ice1000.tt.editing.minitt.MiniTTAnnotator"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.minitt.MiniTTColorSettingsPage"/>
		<stubElementTypeHolder class="org.ice1000.tt.psi.minitt.MiniTTTypes"/>
		<lang.commenter language="Mini-TT" implementationClass="org.ice1000.tt.editing.MiniTTCommenter"/>
		<completion.contributor language="Mini-TT" implementationClass="org.ice1000.tt.editing.minitt.MiniTTCompletionContributor"/>
		<lang.braceMatcher language="Mini-TT" implementationClass="org.ice1000.tt.editing.minitt.MiniTTBraceMatcher"/>
		<lang.findUsagesProvider language="Mini-TT" implementationClass="org.ice1000.tt.editing.minitt.MiniTTFindUsagesProvider"/>
		<lang.refactoringSupport language="Mini-TT" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<lang.foldingBuilder language="Mini-TT" implementationClass="org.ice1000.tt.editing.minitt.MiniTTFoldingBuilder"/>

		<!--RedPRL-->
		<configurationType implementation="org.ice1000.tt.execution.RedPrlRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.RedPrlRunConfigurationProducer"/>
		<lang.parserDefinition language="RedPRL" implementationClass="org.ice1000.tt.psi.redprl.RedPrlGeneratedParserDefinition"/>
		<lang.commenter language="RedPRL" implementationClass="org.ice1000.tt.editing.CxxCommenter"/>
		<annotator language="RedPRL" implementationClass="org.ice1000.tt.editing.redprl.RedPrlAnnotator"/>
		<stubElementTypeHolder class="org.ice1000.tt.psi.redprl.RedPrlTypes"/>
		<lang.braceMatcher language="RedPRL" implementationClass="org.ice1000.tt.editing.redprl.RedPrlBraceMatcher"/>
		<lang.findUsagesProvider language="RedPRL" implementationClass="org.ice1000.tt.editing.redprl.RedPrlFindUsagesProvider"/>
		<lang.refactoringSupport language="RedPRL" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<lang.syntaxHighlighterFactory language="RedPRL" implementationClass="org.ice1000.tt.editing.redprl.RedPrlHighlighterFactory"/>
		<completion.contributor language="RedPRL" implementationClass="org.ice1000.tt.editing.redprl.RedPrlCompletionContributor"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.redprl.RedPrlColorSettingsPage"/>
		<lang.foldingBuilder language="RedPRL" implementationClass="org.ice1000.tt.editing.redprl.RedPrlFoldingBuilder"/>

		<!--Mlang-->
		<configurationType implementation="org.ice1000.tt.execution.MlangRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.MlangRunConfigurationProducer"/>
		<annotator language="Mlang" implementationClass="org.ice1000.tt.editing.mlang.MlangAnnotator"/>
		<lang.braceMatcher language="Mlang" implementationClass="org.ice1000.tt.editing.mlang.MlangBraceMatcher"/>
		<lang.parserDefinition language="Mlang" implementationClass="org.ice1000.tt.psi.mlang.MlangGeneratedParserDefinition"/>
		<lang.refactoringSupport language="Mlang" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<lang.syntaxHighlighterFactory language="Mlang" implementationClass="org.ice1000.tt.editing.mlang.MlangHighlighterFactory"/>
		<stubElementTypeHolder class="org.ice1000.tt.psi.mlang.MlangTypes"/>
		<lang.commenter language="Mlang" implementationClass="org.ice1000.tt.editing.CxxCommenter"/>
		<completion.contributor language="Mlang" implementationClass="org.ice1000.tt.editing.mlang.MlangCompletionContributor"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.mlang.MlangColorSettingsPage"/>
		<lang.foldingBuilder language="Mlang" implementationClass="org.ice1000.tt.editing.mlang.MlangFoldingBuilder"/>

		<!--Narc-->
		<configurationType implementation="org.ice1000.tt.execution.NarcRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.NarcRunConfigurationProducer"/>
		<lang.commenter language="Narc" implementationClass="org.ice1000.tt.editing.CxxLineCommenter"/>
		<lang.refactoringSupport language="Narc" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<lang.braceMatcher language="Narc" implementationClass="org.ice1000.tt.editing.narc.NarcBraceMatcher"/>
		<stubElementTypeHolder class="org.ice1000.tt.psi.narc.NarcTypes"/>
		<lang.findUsagesProvider language="Narc" implementationClass="org.ice1000.tt.editing.narc.NarcFindUsagesProvider"/>
		<lang.syntaxHighlighterFactory language="Narc" implementationClass="org.ice1000.tt.editing.narc.NarcHighlighterFactory"/>
		<completion.contributor language="Narc" implementationClass="org.ice1000.tt.editing.narc.NarcCompletionContributor"/>
		<lang.parserDefinition language="Narc" implementationClass="org.ice1000.tt.psi.narc.NarcGeneratedParserDefinition"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.narc.NarcColorSettingsPage"/>

		<!--VitalyR-->
		<lang.commenter language="VitalyR" implementationClass="org.ice1000.tt.editing.MiniTTCommenter"/>
		<lang.braceMatcher language="VitalyR" implementationClass="org.ice1000.tt.editing.vitalyr.VitalyRBraceMatcher"/>
		<lang.refactoringSupport language="VitalyR" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<lang.syntaxHighlighterFactory language="VitalyR" implementationClass="org.ice1000.tt.editing.vitalyr.VitalyRHighlighterFactory"/>
		<stubElementTypeHolder class="org.ice1000.tt.psi.vitalyr.VitalyRTypes"/>
		<completion.contributor language="VitalyR" implementationClass="org.ice1000.tt.editing.vitalyr.VitalyRCompletionContributor"/>
		<lang.parserDefinition language="VitalyR" implementationClass="org.ice1000.tt.psi.vitalyr.VitalyRGeneratedParserDefinition"/>
		<annotator language="VitalyR" implementationClass="org.ice1000.tt.editing.vitalyr.VitalyRAnnotator"/>

		<!--MiniAgda-->
		<configurationType implementation="org.ice1000.tt.execution.MiniAgdaRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.MiniAgdaRunConfigurationProducer"/>
		<stubElementTypeHolder class="org.ice1000.tt.psi.miniagda.MiniAgdaTypes"/>
		<annotator language="MiniAgda" implementationClass="org.ice1000.tt.editing.miniagda.MiniAgdaAnnotator"/>
		<completion.contributor language="MiniAgda" implementationClass="org.ice1000.tt.editing.miniagda.MiniAgdaCompletionContributor"/>
		<lang.braceMatcher language="MiniAgda" implementationClass="org.ice1000.tt.editing.miniagda.MiniAgdaBraceMatcher"/>
		<lang.syntaxHighlighterFactory language="MiniAgda" implementationClass="org.ice1000.tt.editing.miniagda.MiniAgdaHighlighterFactory"/>
		<lang.refactoringSupport language="MiniAgda" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<lang.findUsagesProvider language="MiniAgda" implementationClass="org.ice1000.tt.editing.miniagda.MiniAgdaFindUsagesProvider"/>
		<lang.parserDefinition language="MiniAgda" implementationClass="org.ice1000.tt.psi.miniagda.MiniAgdaGeneratedParserDefinition"/>
		<lang.commenter language="MiniAgda" implementationClass="org.ice1000.tt.editing.HaskellCommenter"/>

		<applicationConfigurable
			groupId="language"
			instance="org.ice1000.tt.project.ui.TTConfigurable"/>

		<projectConfigurable
			groupId="language"
			parentId="language.TT"
			id="TT.MiniTT.Configurable"
			instance="org.ice1000.tt.project.MiniTTProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			parentId="language.TT"
			id="TT.Agda.Configurable"
			instance="org.ice1000.tt.project.AgdaProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			parentId="language.TT"
			id="TT.ACore.Configurable"
			instance="org.ice1000.tt.project.ACoreProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			parentId="language.TT"
			id="TT.MLPolyR.Configurable"
			instance="org.ice1000.tt.project.MLPolyRProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			parentId="language.TT"
			id="TT.RedPrl.Configurable"
			instance="org.ice1000.tt.project.RedPrlProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			parentId="language.TT"
			id="TT.CubicalTT.Configurable"
			instance="org.ice1000.tt.project.CubicalTTProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			parentId="language.TT"
			id="TT.YaccTT.Configurable"
			instance="org.ice1000.tt.project.YaccTTProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			parentId="language.TT"
			id="TT.Voile.Configurable"
			instance="org.ice1000.tt.project.VoileProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			parentId="language.TT"
			id="TT.Mlang.Configurable"
			instance="org.ice1000.tt.project.MlangProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			parentId="language.TT"
			id="TT.Narc.Configurable"
			instance="org.ice1000.tt.project.NarcProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			parentId="language.TT"
			id="TT.MiniAgda.Configurable"
			instance="org.ice1000.tt.project.MiniAgdaProjectConfigurable"/>
	</extensions>

	<project-components>
		<component>
			<implementation-class>org.ice1000.tt.project.MiniTTProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.AgdaProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.ACoreProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.RedPrlProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.MLPolyRProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.CubicalTTProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.YaccTTProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.VoileProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.VitalyRProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.MlangProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.NarcProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.MiniAgdaProjectSettingsService</implementation-class>
		</component>
	</project-components>

	<actions>
		<action class="org.ice1000.tt.action.NewTTActionGroup" id="TT.NewGroup">
			<add-to-group group-id="NewGroup" anchor="first"/>
		</action>
		<action
			id="org.ice1000.tt.action.HtmlExportAction" class="org.ice1000.tt.action.HtmlExportAction"
			text="Export to Clickable HTML"
			description="Export the current file supported by Dependently-Typed Lambda Calculus to clickable HTML">
			<add-to-group group-id="ToolsMenu" anchor="last"/>
		</action>
	</actions>
</idea-plugin>
